# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        if list1==None and list2==None:
            return list1
        if list1==None and list2!=None:
            return list2
        if list1!=None and list2==None:
            return list1
        ans=ListNode()
        temp=ans
        c=1
        while list1 and list2:
            if list1.val<=list2.val:
                if c==1:
                    temp.val=list1.val
                    list1=list1.next
                    c=0
                else:
                    new=ListNode()
                    new.val=list1.val
                    list1=list1.next
                    temp.next=new
                    temp=temp.next
                        
            else:
                if c==1:
                    temp.val=list2.val
                    list2=list2.next
                    c=0
                else:
                    new=ListNode()
                    new.val=list2.val
                    list2=list2.next
                    temp.next=new
                    temp=temp.next
                        
                
        if list1==None and list2!=None:
            temp.next=list2
        else:
            temp.next=list1
        return ans
        
